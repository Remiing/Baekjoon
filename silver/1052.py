# 물병이 합쳐질 때 2의 배수로 합쳐진다. 예를 들면 13개의 물병이 있을 때 8L, 4L, 1L짜리로 합쳐진다.
# 이 합쳐진 물병의 개수가 k보다 작아질 때까지 1씩 더한다.
# 14개 > 8, 4, 2  15개 > 8, 4, 2, 1  16개 > 16
# 물병의 개수를 2진수로 변환하고 1의 개수를 세면 물병의 개수를 알아낼 수 있다.

import sys
input = sys.stdin.readline
n, k = map(int, input().split())
add = 0                         # 추가할 물병의 개수
while bin(n).count('1') > k:    # 합쳤을 때 물병의 개수 > 합쳐진 물병의 개수
    add += 1
    n += 1
print(add)

# else code
# 만약 n이 120 k가 3이라면 64, 32, 16, 8로 합쳐진다.
# 이런 상황에서 위의 알고리즘으로 1씩 더한다면 8번의 연산을 거쳐야 답을 낼 수 있다.
# 만약 합쳤을 떄 가장 작은 L의 물병을 알아내고 그만큼 더한다면 연산을 줄일 수 있다.

add = 0
while bin(n).count('1') > k:
    idx = bin(n)[::-1].index('1')   # 가장 작은 L의 물병
    add += 2**idx
    n += 2**idx
print(add)
